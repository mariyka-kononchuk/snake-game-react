{"version":3,"sources":["components/Snake/Snake.js","components/Food/Food.js","components/StatusBar/StatusBar.js","components/NameForm/NameForm.js","components/App/App.js","index.js","components/NameForm/NameForm.module.css","components/StatusBar/StatusBar.module.css"],"names":["Snake","props","snakeDots","map","dot","i","style","left","top","className","Food","console","log","StatusBar","score","name","s","bar","high_score","NameForm","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","onCreateNewPlayer","reset","status","this","onSubmit","form","label","title","input","type","onChange","pattern","required","button","Component","getRandomCoordinates","Math","floor","random","initialState","food","speed","direction","totalScore","intervalId","App","createNewPlayer","startMovingSnake","localStorage","getItem","onKeyDown","window","event","keyCode","stopMovingSnake","moveSnake","dots","head","length","push","shift","document","onkeydown","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","setInterval","onGameOver","snake","pop","forEach","enlargeSnake","countingPoints","newSnake","unshift","player","setItem","JSON","stringify","clearInterval","onClick","onRestartGame","ReactDOM","render","StrictMode","querySelector","module","exports"],"mappings":"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","file":"static/js/main.0e747a00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Snake = (props) => (\r\n    <div>\r\n      {props.snakeDots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`\r\n        }\r\n        return (\r\n          <div className=\"snake-dot\" key={i} style={style}></div>\r\n        )\r\n      })}\r\n    </div>\r\n)\r\n\r\nexport default Snake;\r\n  \r\n    \r\n \r\n","import React from 'react';\r\n\r\nconst Food = (props) => {\r\n console.log(\"left\",props.dot[0]);\r\n  console.log(\"top\", props.dot[1]);\r\n  console.log(\"all\", props.dot);\r\n  \r\n  const style = {\r\n    left: `${props.dot[0]}%`,\r\n    top: `${props.dot[1]}%`\r\n  }\r\n\r\n  return (\r\n    <div className=\"snake-food\" style={style}></div>\r\n  )\r\n \r\n\r\n  \r\n};\r\n\r\nexport default Food;\r\n\r\n\r\n ","import React from 'react';\r\nimport s from './StatusBar.module.css';\r\n\r\nconst StatusBar = ({ score, name}) => {\r\n    return (\r\n      <div className={s.bar}>\r\n        <p className={s.name}>Name: {name}</p>\r\n        <p className={s.score}>Score:{score}</p>\r\n        <p className={s.high_score}>High-score:{score}</p>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default StatusBar;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './NameForm.module.css';\r\n\r\nclass NameForm extends Component {\r\n    state = {\r\n        name: ''\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            name: e.target.value,\r\n        });\r\n        \r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            name: e.target.value,\r\n        });\r\n        this.props.onCreateNewPlayer(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '' });\r\n        this.setState({ status: ''});\r\n    }\r\n\r\n    render() {\r\n        const {name} = this.state;\r\n        \r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={s.form}>\r\n                <label className={s.label}>\r\n                    <span className={s.title}>Enter your name</span>\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button className={s.button} type=\"submit\">Begin game</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nNameForm.propTypes = {\r\n    onCreateNewPlayer: PropTypes.func,\r\n};\r\n\r\nexport default NameForm;","import React, { Component } from 'react';\nimport Snake from '../Snake';\nimport Food from '../Food';\nimport StatusBar from '../StatusBar';\nimport NameForm from '../NameForm';\nimport GameOver from '../GameOver';\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  let y =  Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n  return [x,y]\n}\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 150,\n  direction: 'RIGHT',\n  totalScore: 0,\n  name: '',\n  status: 'start',\n  intervalId: 0,\n  snakeDots: [\n    [0,0],\n    [2,0]\n  ]\n}\n\nclass App extends Component {\n\n  state = initialState;\n\n  componentDidMount() {\n    console.log(\"check\")\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    console.log(\"status\", this.state.status)\n    \n    if (this.state.status === 'pause' || this.state.status === 'game_over') {\n      this.stopMovingSnake();\n      return;\n    }\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n  }\n\n  createNewPlayer = ({ name }) => {\n    this.setState({\n      name: name,\n      status: 'game'\n    })\n    this.startMovingSnake();\n    console.log(localStorage.getItem(\"name\"))\n  }\n\n  startMovingSnake() {\n    console.log(\"начали движение змейки\")\n    let intervalId = setInterval(this.moveSnake, this.state.speed);\n    this.setState(\n      { intervalId: intervalId }\n    )\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 38:\n        this.setState({ direction: 'UP' });\n        break;\n      case 40:\n        this.setState({ direction: 'DOWN' });\n        break;\n      case 37:\n        this.setState({ direction: 'LEFT' });\n        break;\n      case 39:\n        this.setState({ direction: 'RIGHT' });\n        break;\n      case 32:\n        if (this.state.status === 'game') {\n          this.setState({ status: 'pause' })\n          this.stopMovingSnake();\n          return;\n        }\n        if (this.state.status === 'pause') {\n          this.setState({ status: 'game' });\n          this.startMovingSnake();\n          return;\n        }\n        \n        break;\n      default:\n        return;\n    }\n  }\n\n  moveSnake = () => {\n    console.log(\"змейка двигается\")\n    \n    let dots = [...this.state.snakeDots];\n    console.log(\"dots\", dots)\n    let head = dots[dots.length - 1];\n\n    switch (this.state.direction) {\n      case 'RIGHT':\n        head = [head[0] + 2, head[1]];\n        break;\n      case 'LEFT':\n        head = [head[0] - 2, head[1]];\n        break;\n      case 'DOWN':\n        head = [head[0], head[1] + 2];\n        break;\n      case 'UP':\n        head = [head[0], head[1] - 2];\n        break;\n      default:\n        return;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots: dots\n    })\n  }\n \n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        this.onGameOver();\n      }\n    })\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    console.log(\"foooods\", food)\n    if (head[0] === food[0] && head[1] === food[1]) {\n      this.setState({\n        food: getRandomCoordinates()\n      })\n      this.enlargeSnake();\n      // this.increaseSpeed();\n      this.countingPoints();\n    }\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([])\n    this.setState({\n      snakeDots: newSnake\n    })\n  }\n\n  countingPoints() {\n    this.setState({\n      totalScore: this.state.totalScore + 10\n    })\n  }\n\n\n  // increaseSpeed() {\n  //   if (this.state.speed > 10) {\n  //     this.setState({\n  //       speed: this.state.speed - 10\n  //     })\n  //   }\n  // }\n\n  onGameOver() {\n    this.setState({\n      status: 'game_over'\n    })\n    \n    const player = {\n      name: this.state.name,\n      score: this.state.totalScore\n    }\n    localStorage.setItem(player, JSON.stringify(player))\n\n\n    //    var object = {\n    //  x: 12,\n    //  y: 56\n    // }\n\n    // localStorage.setItem (\"object\", JSON.stringify(\"object\"));\n    // object = JSON.parse (localStorage.getItem (\"object\"));\n\n    //   console.log(typeof object); // объект\n    //   console.log(object); // Объект {x: 12, y: 56}\n    \n\n    clearInterval(this.state.intervalId);\n  }\n\n  onRestartGame() {\n    this.setState(initialState);\n  }\n\n  stopMovingSnake() {\n    console.log(\"stop moving with pause\")\n    clearInterval(this.state.intervalId);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n    document.onkeydown = null;\n  }\n\n  render() {\n    const { status, totalScore, name, food, snakeDots } = this.state\n    \n    if (status === 'start') {\n      return (\n        <div>\n           <NameForm onCreateNewPlayer={this.createNewPlayer} />\n        </div>)\n    }\n    if (status === 'game' || status === 'pause') {\n      return (\n        <div>\n          <div>\n            <StatusBar score={totalScore} name ={name} status ={status} />\n          </div>\n          <div className=\"game-area\">\n            <Snake snakeDots={snakeDots} />\n            <Food dot={food} />\n          </div>\n        </div>)\n    }\n    \n    if (status === 'game_over') {\n      return (\n        <div>\n          {/* <GameOver score={totalScore} onRestart={this.restartGame }/> */}\n          <div>\n            <h2>GAME OVER</h2>\n            <p>Your score {totalScore}</p>\n            <button type=\"button\" onClick={()=>this.onRestartGame()}>Restart game</button>\n        </div>\n        </div>)\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\n//real DOM\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NameForm_form__3Nrv6\",\"label\":\"NameForm_label__2mvyq\",\"title\":\"NameForm_title__da_wE\",\"input\":\"NameForm_input__1hbdH\",\"button\":\"NameForm_button__2xi8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"StatusBar_bar__HNv8u\",\"name\":\"StatusBar_name__a3APu\",\"score\":\"StatusBar_score__3rnNU\",\"high_score\":\"StatusBar_high_score__3nc0T\"};"],"sourceRoot":""}